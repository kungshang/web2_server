REM Image Cutter Script for Corel PHOTO-PAINT 9
REM Copyright © 1999 by Corel Corporation
REM Requires Corel PHOTO-PAINT 9 Rev B or later
REM Created by Alex Vakulenko
REM Automatically generated by Oberon ScriptExpert Wizard on Tuesday, July 06, 1999
REM Portions (c) 1998 by Alex Vakulenko, http://www.vakcer.com/oberon

DECLARE FUNCTION BeginImage& LIB "scprtl10.dll" (BYVAL x&,BYVAL y&,BYVAL Color&) ALIAS "BeginImage"
DECLARE SUB EndImage LIB "scprtl10.dll" (BYVAL Path$) ALIAS "EndImage"
DECLARE SUB ImageLine LIB "scprtl10.dll" (BYVAL x1&,BYVAL y1&,BYVAL x2&,BYVAL y2&,BYVAL Width&,BYVAL Color&) ALIAS "ImageLine"
DECLARE SUB ImageRectangle LIB "scprtl10.dll" (BYVAL x1&,BYVAL y1&,BYVAL x2&,BYVAL y2&,BYVAL Width&,BYVAL Color&) ALIAS "ImageRectangle"
DECLARE SUB ImageFillRect LIB "scprtl10.dll" (BYVAL x1&,BYVAL y1&,BYVAL x2&,BYVAL y2&,BYVAL Color&) ALIAS "ImageFillRect"
DECLARE SUB ImageTextOut LIB "scprtl10.dll" (BYVAL Text$,BYVAL x&,BYVAL y&,BYVAL Face$,BYVAL PointSize&,BYVAL Weight&, \\
					BYVAL Italic&,BYVAL Underline&,BYVAL StrikeOut&,BYVAL Color&) ALIAS "ImageTextOut"
DECLARE SUB ImageGetTextSize LIB "scprtl10.dll" (BYVAL Text$,BYREF x&,BYREF y&,BYVAL Face$,BYVAL PointSize&,BYVAL Weight&, \\
					BYVAL Italic&,BYVAL Underline&,BYVAL StrikeOut&) ALIAS "ImageGetTextSize"

DECLARE FUNCTION RGB&(r&,g&,b&)

REM DECLARE SUB ShellExecute LIB "shell32" (BYVAL hWnd&,BYVAL Operation&,BYVAL File$,BYVAL Parameters&,BYVAL Directory&,BYVAL Show&) ALIAS "ShellExecuteA"
DECLARE SUB Init
DECLARE SUB DoActions
DECLARE FUNCTION DoJob() AS BOOLEAN
DECLARE SUB BuildPreview
DECLARE SUB GetGuideTable
DECLARE FUNCTION CheckPaintDoc&()
DECLARE SUB InsertColumn(x&)
DECLARE SUB InsertRow(y&)
DECLARE FUNCTION GetCellWidth&(x&,y&)
DECLARE FUNCTION GetCellHeight&(x&,y&)
DECLARE SUB MoveSelection(dx&,dy&)
DECLARE FUNCTION MergeUp(DoAction As Boolean) AS Boolean
DECLARE FUNCTION MergeDown(DoAction As Boolean) AS Boolean
DECLARE FUNCTION MergeLeft(DoAction As Boolean) AS Boolean
DECLARE FUNCTION MergeRight(DoAction As Boolean) AS Boolean
DECLARE SUB Split
DECLARE SUB MakeSpan(x&,y&,sx&,sy&)
DECLARE SUB UpdateSelection()
DECLARE SUB SplitFileName(FileName$,BYREF Path$,BYREF Name$,BYREF Ext$)
DECLARE FUNCTION BuildName$(Pattern$,n&)
DECLARE SUB RebuildPattern(BYREF Pat$)
DECLARE SUB EnableHTMLSettings
DECLARE FUNCTION GetRelativePath(Source$,Destination$) AS STRING
DECLARE SUB SetRelative
DECLARE SUB CheckExists

#define PAINTOBJECT "CorelPhotoPaint.Automation.9"

GLOBAL PreviewFile$
PreviewFile$=GETTEMPFOLDER()+"temp.bmp"
GLOBAL CONST PreviewWidth&=260,PreviewHeight&=260

GLOBAL Wild$
Wild$="#"

GLOBAL DocWidth&,DocHeight&
GLOBAL HCellNum&,VCellNum&,CellHeight&(100),CellWidth&(100)
GLOBAL HExists(100) AS BOOLEAN, VExists(100) AS BOOLEAN
GLOBAL HSpan&(100,100),VSpan&(100,100)
GLOBAL HSel&,VSel&,ImageCellNumber&
GLOBAL Address$(100,100)
GLOBAL Comment$(100,100)
GLOBAL GenerateHTML&,ImageFile$,ImageFolder$,ImageFormat&,OldImageFormat&
GLOBAL HTMLFile$,HTMLFolder$,HTMLFolderConnect&,ShowNumbers&
GLOBAL LowerCase&,LowerPath&

ImageFormat&=1
OldImageFormat&=ImageFormat
HTMLFolderConnect&=TRUE
GenerateHTML=1
ImageFolder$=""
ShowNumbers=1
LowerCase=1
LowerPath=1

GLOBAL FileTypes$(13),FileNum%(13),Ext$(13)

FileNum%(1)=773
FileTypes$(1)="CompuServe Bitmap (GIF)"
Ext$(1)=".GIF"

FileNum%(2)=774
FileTypes$(2)="JPEG Bitmap (JPG)"
Ext$(2)=".JPG"

FileNum%(3)=1808
FileTypes$(3)="Corel PHOTO-PAINT (CPT)"
Ext$(3)=".CPT"

FileNum%(4)=772
FileTypes$(4)="TIFF Bitmap (TIF)"
Ext$(4)=".TIF"

FileNum%(5)=769
FileTypes$(5)="Windows Bitmap (BMP)"
Ext$(5)=".BMP"

FileNum%(6)=770
FileTypes$(6)="Paintbrush (PCX)"
Ext$(6)=".PCX"

FileNum%(7)=771
FileTypes$(7)="Targa Bitmap (TGA)"
Ext$(7)=".TGA"

FileNum%(8)=777
FileTypes$(8)="Wavelet Compressed Bitmap (WVL)"
Ext$(8)=".WVL"

FileNum%(9)=787
FileTypes$(9)="GEM Paint File (IMG)"
Ext$(9)=".IMG"

FileNum%(10)=800
FileTypes$(10)="CALS Compressed Bitmap (CAL)"
Ext$(10)=".CAL"

FileNum%(11)=788
FileTypes$(11)="Adobe Photoshop (PSD)"
Ext$(11)=".PSD"

FileNum%(12)=802
FileTypes$(12)="Portable Network Graphic (PNG)"
Ext$(12)=".PNG"

FileNum%(13)=1289
FileTypes$(13)="Encapsulated PostScript (EPS)"
Ext$(13)=".EPS"

'=========================== Main Dialog =====================================
BEGIN DIALOG OBJECT MainDialog 389, 272, "Image Cutter", SUB MainDlgProc
	GROUPBOX  4, 1, 185, 177, .GroupBox1, "Grid Setup"
	IMAGE  9, 11, 175, 161, .Preview
	PUSHBUTTON  269, 251, 56, 14, .OK, "OK"
	CANCELBUTTON  333, 251, 48, 14, .Cancel
	GROUPBOX  195, 1, 94, 65, .GroupBox2, "Navigate"
	PUSHBUTTON  230, 14, 23, 14, .NavigateUp, "Up"
	PUSHBUTTON  230, 32, 23, 14, .NavigateDown, "Down"
	PUSHBUTTON  202, 22, 23, 14, .NavigateLeft, "Left"
	PUSHBUTTON  258, 22, 23, 14, .NavigateRight, "Right"
	CHECKBOX  200, 51, 85, 10, .ShowNumbers, "Show Image Numbers"
	GROUPBOX  292, 1, 92, 65, .GroupBox3, "Merge Cells"
	PUSHBUTTON  327, 12, 23, 14, .MergeUp, "Up"
	PUSHBUTTON  327, 30, 23, 14, .MergeDown, "Down"
	PUSHBUTTON  299, 20, 23, 14, .MergeLeft, "Left"
	PUSHBUTTON  355, 20, 23, 14, .MergeRight, "Right"
	PUSHBUTTON  300, 48, 77, 14, .Split, "Split"
	GROUPBOX  4, 180, 185, 64, .GroupBox4, "Selection"
	TEXT  12, 193, 33, 8, .Text1, "Width:"
	TEXT  48, 193, 50, 8, .Width, "500 pixels"
	TEXT  101, 193, 25, 8, .Text2, "Height:"
	TEXT  131, 193, 50, 8, .Height, "200 pixels"
	TEXT  12, 208, 33, 8, .AddressLabel, "URL:"
	TEXTBOX  48, 206, 135, 13, .Address
	TEXT  12, 225, 33, 8, .CommentLabel, "Comment:"
	TEXTBOX  48, 223, 135, 13, .Comment
	GROUPBOX  195, 68, 189, 81, .GroupBox5, "Image Settings"
	TEXT  202, 81, 26, 8, .Text7, "Pattern:"
	CHECKBOX  236, 95, 85, 10, .Lowercase, "Lowercase Extension"
	TEXTBOX  236, 79, 143, 13, .ImageFile
	TEXT  202, 111, 22, 8, .Text13, "Folder:"
	TEXTBOX  236, 109, 126, 13, .ImageFolder
	PUSHBUTTON  367, 109, 12, 14, .ImageBrowse, "..."
	TEXT  202, 130, 24, 8, .Text10, "Format:"
	DDLISTBOX  236, 127, 143, 96, .ImageFormat
	GROUPBOX  195, 151, 188, 93, .GroupBox6, "HTML Settings"
	CHECKBOX  236, 164, 100, 10, .GenerateHTML, "Generate HTML page"
	TEXT  202, 180, 14, 8, .HTMLFileLabel, "File:"
	TEXTBOX  236, 177, 143, 13, .HTMLFile
	TEXT  202, 196, 22, 8, .HTMLFolderLabel, "Folder:"
	TEXTBOX  236, 194, 126, 13, .HTMLFolder
	PUSHBUTTON  367, 194, 12, 14, .HTMLBrowse, "..."
	TEXT  202, 214, 30, 8, .RelativeLabel, "Relative:"
	TEXTBOX  236, 212, 143, 13, .Relative
	CHECKBOX  236, 228, 90, 10, .LowerPath, "Lowercase Paths Only"
END DIALOG

'=========================== Progress Dialog =====================================
BEGIN DIALOG OBJECT ProgressDialog 205, 36, "Image Cutter", SUB ProgressProc
	TEXT  83, 7, 38, 8, .Text1, "Working..."
	PROGRESS 3, 20, 200, 8, .Progress
END DIALOG

'=========================== Main Dialog Event Handler =====================================
SUB MainDlgProc(BYVAL ControlID%, BYVAL EventCode%)
SELECT CASE EventCode
	CASE 0 'Init
		Init
 	CASE 1 ' Text boxes, Spinners
		SELECT CASE ControlID
  			CASE MainDialog.Address.GETID(),MainDialog.Comment.GETID()
				s$=LTRIM(RTRIM(MainDialog.Address.GetText()))
				IF UCASE(LEFT(s$,7))<>"HTTP://" AND s$<>"" THEN s$="http://"+s$
				a1&=Address(HSel,VSel)<>"" OR Comment(HSel,VSel)<>""
				Address(HSel,VSel)=s
				Comment(HSel,VSel)=LTRIM(RTRIM(MainDialog.Comment.GetText()))
				a2&=Address(HSel,VSel)<>"" OR Comment(HSel,VSel)<>""
				IF a1<>a2 THEN BuildPreview
  			CASE MainDialog.ImageFile.GETID()
				ImageFile=LTRIM(RTRIM(MainDialog.ImageFile.GetText()))
  			CASE MainDialog.HTMLFile.GETID()
				HTMLFile=LTRIM(RTRIM(MainDialog.HTMLFile.GetText()))
  			CASE MainDialog.ImageFolder.GETID()
				ImageFolder=LTRIM(RTRIM(MainDialog.ImageFolder.GetText()))
				IF HTMLFolderConnect THEN
					HTMLFolder=ImageFolder
					MainDialog.HTMLFolder.SetText HTMLFolder
				ENDIF
				SetRelative
  			CASE MainDialog.HTMLFolder.GETID()
				HTMLFolder=LTRIM(RTRIM(MainDialog.HTMLFolder.GetText()))
				HTMLFolderConnect=(HTMLFolder="")
				SetRelative
		END SELECT
	CASE 2 ' Buttons, list boxes
		SELECT CASE ControlID
  			CASE MainDialog.OK.GETID()
				IF DoJob() THEN MainDialog.CloseDialog TRUE
			CASE MainDialog.NavigateUp.GETID()
				MoveSelection 0,-1
				UpdateSelection
  			CASE MainDialog.NavigateDown.GETID()
				MoveSelection 0,1
				UpdateSelection
  			CASE MainDialog.NavigateRight.GETID()
				MoveSelection 1,0
				UpdateSelection
  			CASE MainDialog.NavigateLeft.GETID()
				MoveSelection -1,0
				UpdateSelection
  			CASE MainDialog.MergeUp.GETID()
				MergeUp TRUE
				UpdateSelection
  			CASE MainDialog.MergeDown.GETID()
				MergeDown TRUE
				UpdateSelection
  			CASE MainDialog.MergeRight.GETID()
				MergeRight TRUE
				UpdateSelection
  			CASE MainDialog.MergeLeft.GETID()
				MergeLeft TRUE
				UpdateSelection
  			CASE MainDialog.Split.GETID()
				Split
				UpdateSelection
  			CASE MainDialog.LowerCase.GETID(), MainDialog.ImageFormat.GETID()
  				LowerCase=MainDialog.LowerCase.GETVALUE()
				OldImageFormat&=ImageFormat
				ImageFormat=MainDialog.ImageFormat.GetSelect()
				ImageFile=MainDialog.ImageFile.GetText()
				RebuildPattern ImageFile
				MainDialog.ImageFile.SetText ImageFile
				OldImageFormat=ImageFormat
			CASE MainDialog.ShowNumbers.GETID()
				ShowNumbers=MainDialog.ShowNumbers.GetValue()
				BuildPreview
			CASE MainDialog.GenerateHTML.GETID()
				GenerateHTML=MainDialog.GenerateHTML.GetValue()
				EnableHTMLSettings
				BuildPreview
			CASE MainDialog.ImageBrowse.GETID()
				s$=GetFolder(ImageFolder)
				IF s$<>"" THEN
					ImageFolder=s
					MainDialog.ImageFolder.SetText ImageFolder
					IF HTMLFolderConnect THEN
 						HTMLFolder=ImageFolder
						MainDialog.HTMLFolder.SetText HTMLFolder
					ENDIF
					SetRelative
				ENDIF
			CASE MainDialog.HTMLBrowse.GETID()
				s$=GetFolder(HTMLFolder)
				IF s$<>"" THEN
					HTMLFolder=s
					MainDialog.HTMLFolder.SetText HTMLFolder
					HTMLFolderConnect=FALSE
					SetRelative
				ENDIF
			CASE MainDialog.LowerPath.GETID()
				LowerPath=MainDialog.LowerPath.GetValue()
				SetRelative
		END SELECT
	CASE 4 ' Change in focus
		IF HTMLFolder="" AND ImageFolder<>"" THEN
			HTMLFolder=ImageFolder
			MainDialog.HTMLFolder.SetText HTMLFolder
			SetRelative
		ENDIF
		s$=ImageFile
		RebuildPattern s$
		IF s$<>ImageFile THEN
			ImageFile=s
			MainDialog.ImageFile.SetText ImageFile
		END IF
	END SELECT
END SUB

'=========================== Init Dialog =======================
'Initialize main dialog controls here
SUB Init
	' Add main dialog initialization procedures here
	MainDialog.Relative.Enable FALSE
	EnableHTMLSettings
	SetRelative
	BuildPreview
	UpdateSelection
END SUB

'=========================== Main =======================
IF CheckPaintDoc()=0 THEN
	GetGuideTable
	WITH MainDialog
		.Preview.SetStyle 288
		RebuildPattern ImageFile
		.ImageFile.SetText ImageFile
		.ImageFolder.SetText ImageFolder
		.HTMLFile.SetText HTMLFile
		.HTMLFolder.SetText HTMLFolder
		.GenerateHTML.SetThreeState FALSE
		.GenerateHTML.SetValue GenerateHTML
		.ShowNumbers.SetThreeState FALSE
		.ShowNumbers.SetValue ShowNumbers
		.LowerCase.SetThreeState FALSE
		.LowerCase.SetValue LowerCase
		.LowerPath.SetThreeState FALSE
		.LowerPath.SetValue LowerPath
		.ImageFormat.SetArray FileTypes
		.ImageFormat.SetSelect ImageFormat
	END WITH
	DIALOG MainDialog
	KILL PreviewFile
ENDIF
STOP

'=========================== Progress Dialog Event Handler =====================================
SUB ProgressProc(BYVAL CtrlID%, BYVAL Event%)
IF Event=0 THEN
	ProgressDialog.Progress.SetValue 0
	ProgressDialog.Progress.SetMinRange 0
	ProgressDialog.Progress.SetMaxRange ImageCellNumber
	ProgressDialog.Progress.SetIncrement 1
	DoActions
	ProgressDialog.CloseDialog 0
END IF
END SUB


'=========================== Build Preview for Main Dialog =======================
SUB BuildPreview
	BeginImage PreviewWidth,PreviewHeight,RGB(128,128,128)
	IF (DocWidth*PreviewHeight)\DocHeight>PreviewWidth THEN
		sx&=PreviewWidth
		sy&=DocHeight*PreviewWidth\DocWidth
	ELSE
		sx&=DocWidth*PreviewHeight\DocHeight
		sy&=PreviewHeight
	ENDIF
	cx&=(PreviewWidth-sx)\2
	cy&=(PreviewHeight-sy)\2
	ImageFillRect cx,cy,cx+sx-1,cy+sy-1,RGB(255,255,255)
	' == Drawing Grid
	n&=1
	PosX&=0
	FOR x&=1 to HCellNum-1
		PosX=PosX+CellWidth(x)
		x1&=PosX*sx\DocWidth+cx
		ImageLine x1,cy,x1,cy+sy,1,RGB(200,200,200)
	NEXT x
	PosY&=0
	FOR y&=1 to VCellNum-1
		PosY=PosY+CellHeight(y)
		y1&=PosY*sy\DocHeight+cy
		ImageLine cx,y1,cx+sx,y1,1,RGB(200,200,200)
	NEXT y
	
	' == Drawing the rest of rectangles
	PosY&=0
	FOR y&=1 to VCellNum
		PosX&=0
		FOR x&=1 to HCellNum
			IF HSpan(x,y)>0 AND VSpan(x,y)>0 THEN
				x1&=PosX*sx\DocWidth+cx
				x2&=(PosX+GetCellWidth(x,y))*sx\DocWidth+cx
				y1&=PosY*sy\DocHeight+cy
				y2&=(PosY+GetCellHeight(x,y))*sy\DocHeight+cy
				HasData&=FALSE
				IF (LTRIM(Address(x,y))<>"" OR LTRIM(Comment(x,y))<>"") AND GenerateHTML<>0 THEN HasData&=TRUE
				IF HSel=x AND VSel=y THEN
					IF HasData THEN c&=RGB(255,0,128) ELSE c&=RGB(255,0,0)
					ImageFillRect x1,y1,x2-1,y2-1,c
				ELSE
					IF HasData THEN c&=RGB(255,0,255) ELSE c&=RGB(0,0,255)
					ImageRectangle x1,y1,x2-1,y2-1,1,c
				END IF
				IF ShowNumbers THEN
					ns$=CSTR(n)
					IF HasData THEN wt&=700 ELSE wt&=400
					ImageGetTextSize ns$, tsx&, tsy&, "MS Sans Serif", 8, wt, FALSE, FALSE, FALSE
					ImageTextOut CSTR(n),(x1+x2-tsx)\2,(y1+y2-tsy)\2,"MS Sans Serif",8,wt,FALSE,FALSE,FALSE,RGB(0,0,0)
				END IF
				n=n+1
			END IF
			PosX=PosX+CellWidth(x)
		NEXT x
		PosY=PosY+CellHeight(y)
	NEXT y
	EndImage PreviewFile$
	MainDialog.Preview.SetImage PreviewFile$
	ImageCellNumber&=n
END SUB

'=========================== RGB for UI Extension Library =======================
FUNCTION RGB&(r&, g&, b&)
	RGB=(r AND 255)+((g AND 255)<<8)+((b AND 255)<<16)
END FUNCTION

FUNCTION DoJob() AS BOOLEAN
WITHOBJECT PAINTOBJECT
	res&=TRUE
	o&=.GetObjectCount()
	IF o>0 THEN
		IF o=1 THEN e$="" ELSE e$="s"
		r&=MessageBox("Image contains " & o & " object"+e$+". Do you want to flatten the image?","Flatten image",35)
		IF r=6 THEN
			.ObjectMerge TRUE
			.EndObject
		ENDIF
		IF r=2 THEN res=FALSE
	END IF
	IF res THEN
		IF FileNum(ImageFormat)=773 THEN 
			o&=.GetDocumentType()
			IF o=1 OR o>4 THEN
				MessageBox "Image should be converted to 8 bit palette or Black&White in order to save it to GIF","Invalid color mode",16
				res=FALSE
			ENDIF
		END IF
		IF res AND GenerateHTML AND FileNum(ImageFormat)<>773 AND FileNum(ImageFormat)<>774 AND FileNum(ImageFormat)<>802 THEN
			res=MessageBox("You should use GIF, JPEG, and PNG if you want to generate HTML page."+CHR(13)+ \\
						"Are you sure you want to continue with the current image format?","File format conflict",36)<>7
		ENDIF
		IF GenerateHTML AND res THEN 
			ON ERROR RESUME NEXT
			ERRNUM=0
			OutFolder$=HTMLFolder
			IF RIGHT(OutFolder,1)<>"\" THEN OutFolder=OutFolder+"\"
			Open OutFolder+HTMLFile FOR Output AS #1
			IF ERRNUM<>0 THEN
				MessageBox "Unable to create file '"+OutFolder+HTMLFile+"'","File system error",16
				res=FALSE
				ERRNUM=0
			ENDIF
			ON ERROR EXIT
			CheckExists
		ENDIF
		IF res THEN DIALOG ProgressDialog
		IF GenerateHTML AND res THEN CLOSE #1
	END IF
END WITHOBJECT
DoJob=res
END FUNCTION

'=========================== Put the main actions here =======================
SUB DoActions
WITHOBJECT PAINTOBJECT
	q$=CHR(34)
	OutFolder$=ImageFolder
	IF RIGHT(OutFolder,1)<>"\" THEN OutFolder=OutFolder+"\"
	IF GenerateHTML THEN
		PRINT #1,"<html>"
		PRINT #1,""
		PRINT #1,"<head>"
		PRINT #1,"<meta name="+q$+"GENERATOR"+q$+" content="+q$+"Corel PHOTO-PAINT 9 Image Cutter Script"+q$+">"
		PRINT #1,"<title>Image Cutter Output File</title>"
		PRINT #1,"</head>"
		PRINT #1,""
		PRINT #1,"<body>"
		PRINT #1,"<table border="+q$+"0"+q$+" cellspacing="+q$+"0"+q$+" cellpadding="+q$+"0"+q$+" height="+q$+CSTR(DocHeight)+q$+" width="+q$+CSTR(DocWidth)+q$+">"
	END IF
	n&=1
	PosY&=0
	FOR y&=1 to VCellNum
		PosX&=0
		IF GenerateHTML THEN PRINT #1,"  <tr>"
		FOR x&=1 to HCellNum
			IF HSpan(x,y)>0 AND VSpan(x,y)>0 THEN
				x1&=PosX
				x2&=PosX+GetCellWidth(x,y)
				y1&=PosY
				y2&=PosY+GetCellHeight(x,y)
				.MaskRectangle x1,y1,x2-1,y2-1,0
				FileName$=BuildName$(ImageFile,n)
REM 				IF FileNum(ImageFormat)=774 THEN .FilterJPG 50,FALSE,0,0,FALSE
REM 				IF FileNum(ImageFormat)=773 THEN .FilterGIF FALSE,FALSE,0,255,70,192,192,192
				.EditCopyToFile OutFolder+FileName$,FileNum%(ImageFormat),0
				IF GenerateHTML THEN
					hs&=HSpan(x,y)
					vs&=VSpan(x,y)
					FOR i&=x to x+HSpan(x,y)-1
						IF NOT HExists(i) THEN hs=hs-1
					NEXT i
					FOR i&=y to y+VSpan(x,y)-1
						IF NOT VExists(i) THEN vs=vs-1
					NEXT i
					PRINT #1,"    <td ";
					IF hs>1 THEN PRINT #1,"colspan="+q$+CSTR(hs)+q$+" ";
					IF vs>1 THEN PRINT #1,"rowspan="+q$+CSTR(vs)+q$+" ";
					PRINT #1,"height="+q$+CSTR(y2-y1)+q$+" width="+q$+CSTR(x2-x1)+q$+">";
					IF Address(x,y)<>"" THEN	PRINT #1,"<a href="+q$+Address(x,y)+q$+">";
					PRINT #1,"<img src="+q$+GetRelativePath(HTMLFolder,ImageFolder)+FileName$+q$+" ";
					PRINT #1,"height="+q$+CSTR(y2-y1)+q$+" width="+q$+CSTR(x2-x1)+q$;
					IF Comment(x,y)<>"" THEN PRINT #1," alt="+q$+Comment(x,y)+q$;
					PRINT #1," border="+q$+"0"+q$+">";
					IF Address(x,y)<>"" THEN	PRINT #1,"</a>";
					PRINT #1,"</td>"
				END IF
				n=n+1
				ProgressDialog.Progress.Step
			END IF
			PosX=PosX+CellWidth(x)
		NEXT x
		IF GenerateHTML THEN PRINT #1,"  </tr>"
		PosY=PosY+CellHeight(y)
	NEXT y
	IF GenerateHTML THEN
		PRINT #1,"</table>"
		PRINT #1,"</body>"
		PRINT #1,"</html>"
	END IF
	.MaskRemove
END WITHOBJECT
END SUB

'=========================== Check Corel PHOTO-PAINT Document =======================
FUNCTION CheckPaintDoc&()
ret&=0
WITHOBJECT PAINTOBJECT
	s$=.GetPaintVersion()
	p&=InStr(s$,".")
	IF p=0 then p=LEN(s$)-4
	s$=MID(s$,p+1)
	b&=VAL(s$)
	IF b<=337 THEN
		MessageBox "This script requires Corel PHOTO-PAINT 9 Rev B or later.","Image Cutter",16
		ret=1
	ELSE
		ON ERROR RESUME NEXT
		ERRNUM=0
		.BindToActiveDocument
		IF ERRNUM<>0 THEN 
			MessageBox "There's no active document open","Error",16
			ret=1
			ERRNUM=0
		END IF
		ON ERROR EXIT
		IF ret=0 THEN
			IF .GetGuidelineCount()=0 THEN
				ret=MessageBox("Cutting the image into pieces requires the use of guidelines. "+CHR(13)+CHR(13)+\\
												"Do you want to continue?","Warning",49)=2
			END IF
		END IF
	ENDIF
END WITHOBJECT
CheckPaintDoc=ret
END FUNCTION

SUB GetGuideTable
WITHOBJECT PAINTOBJECT
	HCellNum&=1
	VCellNum&=1
	DocWidth&=.GetDocumentWidth()
	DocHeight&=.GetDocumentHeight()
	SplitFileName CSTR(.GetDocumentName()),Path$,ImageFile$,Extension$
	HTMLFile$=ImageFile$+".html"
	CellWidth&(1)=DocWidth
	CellHeight&(1)=DocHeight&
	n&=.GetGuidelineCount()
	FOR i&=1 to n
		.GetGuidelineProperties i,x&,y&,a&,t&
		IF t=0 THEN 'vertical
			InsertColumn x
		ELSE ' horizontal
			InsertRow y
		END IF
	NEXT i
	FOR i&=1 to HCellNum
		FOR j&=1 To VCellNum
			HSpan(i,j)=1
			VSpan(i,j)=1
		NEXT j
	NEXT i
	HSel&=1
	VSel&=1
END WITHOBJECT
END SUB

SUB InsertColumn(x&)
Pos&=0
FOR i&=1 to HCellNum
	IF x>Pos AND x<Pos+CellWidth(i) THEN
		FOR j&=HCellNum+1 to i+2 step -1
			CellWidth(j)=CellWidth(j-1)
		NEXT j
		CellWidth(i+1)=CellWidth(i)+Pos-x
		CellWidth(i)=x-Pos
		HCellNum=HCellNum+1
		EXIT FOR
	ELSE
		Pos=Pos+CellWidth(i)
	END IF
NEXT i
END SUB

SUB InsertRow(y&)
Pos&=0
FOR i&=1 to VCellNum
	IF y>Pos AND y<Pos+CellHeight(i) THEN
		FOR j&=VCellNum+1 to i+2 step -1
			CellHeight(j)=CellHeight(j-1)
		NEXT j
		CellHeight(i+1)=CellHeight(i)+Pos-y
		CellHeight(i)=y-Pos
		VCellNum=VCellNum+1
		EXIT FOR
	ELSE
		Pos=Pos+CellHeight(i)
	END IF
NEXT i
END SUB

FUNCTION GetCellWidth&(x&,y&)
	w&=0
	n&=HSpan(x,y)
	FOR i&=x TO x+n-1
		w=w+CellWidth(i)
	NEXT i
	GetCellWidth=w
END FUNCTION

FUNCTION GetCellHeight&(x&,y&)
	h&=0
	n&=VSpan(x,y)
	FOR i&=y TO y+n-1
		h=h+CellHeight(i)
	NEXT i
	GetCellHeight=h
END FUNCTION

SUB MoveSelection(dx&,dy&)
	tx&=HSel
	ty&=VSel
	sp&=-tx*1000-ty
	FOR i&=1 TO ABS(dx)
		IF dx<0 THEN
			IF HSel>1 THEN HSel=HSel-1
			WHILE HSel>1
				IF HSpan(HSel,VSel)>0 OR HSpan(HSel,VSel)<>sp THEN EXIT WHILE
				HSel=HSel-1
			WEND
		ELSE
			IF HSel<HCellNum THEN HSel=HSel+1
			WHILE HSel<HCellNum
				IF HSpan(HSel,VSel)>0 OR HSpan(HSel,VSel)<>sp THEN EXIT WHILE
				HSel=HSel+1
			WEND
		END IF
		IF HSpan(HSel,VSel)<0 THEN 
			v&=-HSpan(HSel,VSel)
			HSel=v\1000
			VSel=v MOD 1000
		END IF
	NEXT i
	FOR i&=1 TO ABS(dy)
		IF dy<0 THEN
			IF VSel>1 THEN VSel=VSel-1
			WHILE VSel>1
				IF VSpan(HSel,VSel)>0 OR VSpan(HSel,VSel)<>sp THEN EXIT WHILE
				VSel=VSel-1
			WEND
		ELSE
			IF VSel<VCellNum THEN VSel=VSel+1
			WHILE VSel<VCellNum
				IF VSpan(HSel,VSel)>0 OR VSpan(HSel,VSel)<>sp THEN EXIT WHILE
				VSel=VSel+1
			WEND
		END IF
		IF VSpan(HSel,VSel)<0 THEN 
			v&=-VSpan(HSel,VSel)
			HSel=v\1000
			VSel=v MOD 1000
		END IF
	NEXT i
	BuildPreview
END SUB

FUNCTION MergeUp(DoAction As Boolean) AS Boolean
Dim Done as boolean
Done=FALSE
	IF VSel>1 THEN
		chsp&=HSpan(HSel,VSel)
		cvsp&=VSpan(HSel,VSel)
		hsp&=HSpan(HSel,VSel-1)
		IF hsp>0 THEN
			x&=HSel
			y&=VSel-1
		ELSE
			x&=(-hsp)\1000
			y&=(-hsp)MOD 1000
		END IF
		IF x=HSel THEN
			w&=HSpan(x,y)
			hsp&=w
			h&=VSpan(x,y)
			vsp&=h
			x1&=x
			WHILE w<chsp
				x1=x1+hsp
				hsp=HSpan(x1,y)
				vsp=VSpan(x1,y)
				IF vsp<>h THEN EXIT WHILE
				w=w+hsp
			WEND
			IF w=chsp THEN
				IF DoAction THEN
					MakeSpan x,y,chsp,vsp+cvsp
					HSel=x
					VSel=y
				END IF
				Done=TRUE
			END IF
		END IF
	END IF
	IF DoAction THEN
		IF Done THEN BuildPreview ELSE BEEP
	END IF
	MergeUp=Done
END FUNCTION

FUNCTION MergeDown(DoAction As Boolean) AS Boolean
Dim Done as boolean
Done=FALSE
	chsp&=HSpan(HSel,VSel)
	cvsp&=VSpan(HSel,VSel)
	IF VSel<=VCellNum-cvsp THEN
		x&=HSel
		y&=VSel+cvsp
		hsp&=HSpan(x,y)
		vsp&=VSpan(x,y)
		IF hsp>0 AND vsp>0 THEN
			w&=hsp
			h&=vsp
			x1&=x
			WHILE w<chsp
				x1=x1+hsp
				hsp=HSpan(x1,y)
				vsp=VSpan(x1,y)
				IF vsp<>h THEN EXIT WHILE
				w=w+hsp
			WEND
			IF w=chsp THEN
				IF DoAction THEN
					MakeSpan HSel,VSel,chsp,cvsp+vsp
				END IF
				Done=TRUE
			END IF
		END IF
	END IF
	IF DoAction THEN
		IF Done THEN BuildPreview ELSE BEEP
	END IF
	MergeDown=Done
END FUNCTION

FUNCTION MergeLeft(DoAction As Boolean) AS Boolean
Dim Done as boolean
Done=FALSE
	IF HSel>1 THEN
		chsp&=HSpan(HSel,VSel)
		cvsp&=VSpan(HSel,VSel)
		hsp&=HSpan(HSel-1,VSel)
		IF hsp>0 THEN
			x&=HSel-1
			y&=VSel
		ELSE
			x&=(-hsp)\1000
			y&=(-hsp)MOD 1000
		END IF
		IF y=VSel THEN
			w&=HSpan(x,y)
			hsp&=w
			h&=VSpan(x,y)
			vsp&=h
			y1&=y
			WHILE h<cvsp
				y1=y1+vsp
				hsp=HSpan(x,y1)
				vsp=VSpan(x,y1)
				IF hsp<>w THEN EXIT WHILE
				h=h+vsp
			WEND
			IF h=cvsp THEN
				IF DoAction THEN
					MakeSpan x,y,hsp+chsp,cvsp
					HSel=x
					VSel=y
				END IF
				Done=TRUE
			END IF
		END IF
	END IF
	IF DoAction THEN
		IF Done THEN BuildPreview ELSE BEEP
	END IF
	MergeLeft=Done
END FUNCTION

FUNCTION MergeRight(DoAction As Boolean) AS Boolean
Dim Done as boolean
Done=FALSE
	chsp&=HSpan(HSel,VSel)
	cvsp&=VSpan(HSel,VSel)
	IF HSel<=HCellNum-chsp THEN
		x&=HSel+chsp
		y&=VSel
		hsp&=HSpan(x,y)
		vsp&=VSpan(x,y)
		IF hsp>0 AND vsp>0 THEN
			w&=hsp
			h&=vsp
			y1&=y
			WHILE h<cvsp
				y1=y1+vsp
				hsp=HSpan(x,y1)
				vsp=VSpan(x,y1)
				IF hsp<>w THEN EXIT WHILE
				h=h+vsp
			WEND
			IF h=cvsp THEN
				IF DoAction THEN
					MakeSpan HSel,VSel,hsp+chsp,cvsp
				END IF
				Done=TRUE
			END IF
		END IF
	END IF
	IF DoAction THEN
		IF Done THEN BuildPreview ELSE BEEP
	END IF
	MergeRight=Done
END FUNCTION

SUB Split
	sx&=HSpan(HSel,VSel)
	sy&=VSpan(HSel,VSel)
	FOR i&=HSel TO HSel+sx-1
		FOR j&=VSel To VSel+sy-1
			HSpan(i,j)=1
			VSpan(i,j)=1
		NEXT j
	NEXT i
	BuildPreview
END SUB

SUB MakeSpan(x&,y&,sx&,sy&)
	HSpan(x,y)=sx
	VSpan(x,y)=sy
	sp&=-x*1000-y
	FOR i&=x to x+sx-1
		FOR j&=y to y+sy-1
			IF i<>x OR j<>y THEN
				HSpan(i,j)=sp
				VSpan(i,j)=sp
			END IF
		NEXT j
	NEXT i
END SUB

SUB UpdateSelection()
WITH MainDialog
	.Address.SetText Address(HSel,VSel)
	.Comment.SetText Comment(HSel,VSel)
	x&=GetCellWidth(HSel,VSel)
	if x<>1 THEN s$="s" ELSE s$=""
	.Width.SetText CSTR(x)+" pixel"+s$
	x&=GetCellHeight(HSel,VSel)
	if x<>1 THEN s$="s" ELSE s$=""
	.Height.SetText CSTR(x)+" pixel"+s$
	.Split.Enable HSpan(HSel,VSel)<>1 OR VSpan(HSel,VSel)<>1
	.MergeUp.Enable MergeUp(FALSE)
	.MergeDown.Enable MergeDown(FALSE)
	.MergeLeft.Enable MergeLeft(FALSE)
	.MergeRight.Enable MergeRight(FALSE)
END WITH
END SUB

SUB RebuildPattern(BYREF Pat$)
	SplitFileName Pat$,SPath$,SName$,SExt$
	IF SName="" THEN SName$="Image"
	IF INSTR(SName,Wild$)=0 THEN SName=SName+Wild
	IF SExt="" OR UCASE(SExt)=Ext$(OldImageFormat) THEN SExt$=Ext$(ImageFormat)
	IF LowerCase THEN SExt$=LCASE(SExt) ELSE SExt$=UCASE(SExt$)
	Pat=SPath+SName+SExt$
END SUB

'=========================== Split File Name =====================================
SUB SplitFileName(FileName$,BYREF Path$,BYREF Name$,BYREF Ext$)
i&=0
p&=1
WHILE p<>0
	p&=INSTR(FileName,"\",i+1)
	IF p<>0 THEN i=p
WEND
Path$=LEFT(FileName,i)
s&=i
p&=1
WHILE p<>0
	p&=INSTR(FileName,".",i+1)
	IF p<>0 THEN i=p
WEND
IF i=s then i=LEN(FileName)+1
Name$=MID(FileName,s+1,i-s-1)
Ext$=MID(FileName,i)
END SUB

'========================== BuildName ============================
FUNCTION BuildName$(Pattern$,n&)
SplitFileName Pattern$,SPath$,SName$,SExt$
p&=INSTR(SName$,Wild$)
q&=p
Lead$=""
WHILE MID(SName$,q,1)=Wild$
	q=q+1
	Lead$=Lead$+"0"
WEND
sn1$=LEFT(SName$,p-1)
sn2$=MID(SName$,q)
nm$=LTRIM(STR(n))
IF LEN(nm$)<q-p THEN nm$=RIGHT(Lead$+nm$,q-p)
SName$=sn1$+nm+sn2$
BuildName$=SPath$+SName$+SExt$
END FUNCTION

SUB EnableHTMLSettings
WITH MainDialog
	.AddressLabel.Enable GenerateHTML<>0
	.Address.Enable GenerateHTML<>0
	.CommentLabel.Enable GenerateHTML<>0
	.Comment.Enable GenerateHTML<>0
	.HTMLFileLabel.Enable GenerateHTML<>0
	.HTMLFile.Enable GenerateHTML<>0
	.HTMLFolderLabel.Enable GenerateHTML<>0
	.HTMLFolder.Enable GenerateHTML<>0
	.HTMLBrowse.Enable GenerateHTML<>0
	.RelativeLabel.Enable GenerateHTML<>0
	.LowerPath.Enable GenerateHTML<>0
END WITH
END SUB

FUNCTION GetRelativePath(Source$,Destination$) AS STRING
	s$=Source
	IF LEFT(s$,1)<>"\" AND MID(s$,2,1)<>":" THEN s$=GetCurrFolder()+"\"+Source
	IF LEFT(s$,1)="\" THEN s$=LEFT(GetCurrFolder(),2)+s$
	s=MID(s,3) ' Remove Drive Letter
	Src$=UCASE(s)
	s$=Destination
	IF LEFT(s$,1)<>"\" AND MID(s$,2,1)<>":" THEN s$=GetCurrFolder()+"\"+Destination
	IF LEFT(s$,1)="\" THEN s$=LEFT(GetCurrFolder(),2)+s$
	s=MID(s,3)
	Dest$=UCASE(s)
	IF RIGHT(Src,1)<>"\" THEN Src=Src+"\"
	IF RIGHT(Dest,1)<>"\" THEN Dest=Dest+"\"
	i1&=0
	i2&=0
	DO
		p1&=i1
		p2&=i1
		i1&=InStr(Src,"\",p1+1)
		i2&=InStr(Dest,"\",p1+1)
	LOOP WHILE i1<>0 AND i2<>0 AND i1=i2 AND LEFT(Src,i1)=LEFT(Dest,i2)
	Res$=""
	WHILE i1<>0
		i1=InStr(Src,"\",i1+1)
		Res=Res+"../"
	WEND
	Res=Res+MID(s,p2+1)
	i1=InStr(Res,"\")
	WHILE i1<>0
		MID(Res,i1,1)="/"
		i1=InStr(Res,"\",i1+1)
	WEND
	IF Res<>"" AND RIGHT(Res,1)<>"/" THEN Res=Res+"/"
	IF LowerPath THEN Res=LCASE(Res)
	GetRelativePath=Res
END FUNCTION

SUB SetRelative
	Path$=GetRelativePath(HTMLFolder,ImageFolder)
	MainDialog.Relative.SetText Path
END SUB

SUB CheckExists
	FOR x&=1 to HCellNum
		HExists(x)=FALSE
	NEXT x
	FOR y&=1 to VCellNum
		VExists(y)=FALSE
	NEXT y
	FOR y&=1 to VCellNum
		FOR x&=1 to HCellNum
			IF HSpan(x,y)>0 AND VSpan(x,y)>0 THEN
				HExists(x)=TRUE
				VExists(y)=TRUE
			END IF
		NEXT x
	NEXT y
END SUB
